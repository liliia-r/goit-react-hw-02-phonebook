{"version":3,"sources":["components/Contact/Contact.js","components/Contacts/Contacts.js","components/Phonebook/Phonebook.js","components/ContactsFilter/ContactsFilter.js","App.js","index.js"],"names":["Contact","name","number","onDeleteContact","id","onClick","Contacts","filteredContacts","length","map","contact","key","Phonebook","state","handlerChange","e","target","value","setState","handlerSubmit","preventDefault","uuidv4","props","onHandlerSubmit","reset","this","className","onSubmit","htmlFor","type","onChange","Component","ContactsFilter","filter","onHandleChangeFilter","App","contacts","handleChangeFilter","addContact","some","savedContact","toLowerCase","toast","error","warn","deleteContact","includes","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a12207c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Contact = ({ name, number, onDeleteContact, id }) => {\n  return (\n    <>\n      {name}: {number}\n      <button onClick={onDeleteContact}>Delete</button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"../Contact/Contact\";\nimport PropTypes from \"prop-types\";\n\nconst Contacts = ({ filteredContacts, onDeleteContact }) =>\n  filteredContacts.length > 0 && (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <li key={contact.id}>\n          <Contact\n            {...contact}\n            onDeleteContact={() => onDeleteContact(contact.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n\nContacts.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Phonebook extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handlerChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handlerSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    this.props.onHandlerSubmit(contact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form className=\"PhonebookForm\" onSubmit={this.handlerSubmit}>\n          <h2>Phonebook</h2>\n\n          <label htmlFor=\"name\" className=\"Label\">\n            Name\n            <input\n              className=\"PhonebookForm__name\"\n              type=\"text\"\n              id={name}\n              name=\"name\"\n              value={name}\n              onChange={this.handlerChange}\n            />\n          </label>\n\n          <label htmlFor=\"number\">\n            Number\n            <input\n              className=\"PhonebookForm__number\"\n              type=\"text\"\n              id={number}\n              name=\"number\"\n              value={number}\n              onChange={this.handlerChange}\n            />\n          </label>\n\n          <button className=\"PhonebookForm__btn\" type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsFilter = ({ filter, onHandleChangeFilter }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label htmlFor=\"filter\">\n        Find contacts by name\n        <input\n          className=\"PhonebookForm__filter\"\n          type=\"text\"\n          id={filter}\n          name=\"filter\"\n          value={filter}\n          onChange={onHandleChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nContactsFilter.propTypes = {\n  filter: PropTypes.string,\n  onHandleChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport ContactsFilter from \"./components/ContactsFilter/ContactsFilter\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleChangeFilter = (e) => {\n    const value = e.target.value;\n    this.setState({ filter: value });\n  };\n\n  addContact = (contact) => {\n    const isExist = this.state.contacts.some(\n      (savedContact) =>\n        savedContact.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExist) {\n      toast.error(`${contact.name} is already in contacts.`);\n      return;\n    }\n    if (contact.name.length > 2 && contact.number.length > 5) {\n      this.setState((state) => ({\n        contacts: [...this.state.contacts, contact],\n      }));\n    } else if (contact.name.length <= 2) {\n      toast.warn(\"Small contact name!\");\n    } else if (contact.number.length <= 4) {\n      toast.warn(\"Small contact number!\");\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n    return (\n      <>\n        <Phonebook onHandlerSubmit={this.addContact} />\n        <ToastContainer autoClose={5000} />\n        {this.state.contacts.length >= 2 && (\n          <ContactsFilter\n            filter={filter}\n            onHandleChangeFilter={this.handleChangeFilter}\n          />\n        )}\n        <Contacts\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}